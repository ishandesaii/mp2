{"ast":null,"code":"var _jsxFileName = \"/Users/ishandesai/Desktop/mp2/mp2/src/pages/ListView.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { searchMealsByName } from \"../api/meals\";\nimport SearchBar from \"../components/SearchBar\";\nimport SortControls from \"../components/SortControls\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListView() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [raw, setRaw] = useState([]);\n  const [sortKey, setSortKey] = useState(\"name\");\n  const [sortDir, setSortDir] = useState(\"asc\");\n  useEffect(() => {\n    if (query.trim() === \"\") {\n      setRaw([]); // don’t show anything until user searches\n      return;\n    }\n    searchMealsByName(query).then(setRaw);\n  }, [query]);\n  const filtered = raw.filter(m => m.strMeal.toLowerCase().includes(query.toLowerCase()));\n  const sorted = [...filtered].sort((a, b) => {\n    const av = sortKey === \"name\" ? a.strMeal : a.strArea || \"\";\n    const bv = sortKey === \"name\" ? b.strMeal : b.strArea || \"\";\n    return sortDir === \"asc\" ? av.localeCompare(bv) : bv.localeCompare(av);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      value: query,\n      onChange: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortControls, {\n      sortKey: sortKey,\n      setSortKey: setSortKey,\n      sortDir: sortDir,\n      setSortDir: setSortDir\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), query.trim() === \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#636e72\"\n      },\n      children: \"Start typing to search for meals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : sorted.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px,1fr))\",\n        gap: \"1rem\"\n      },\n      children: sorted.map(m => /*#__PURE__*/_jsxDEV(Card, {\n        meal: m,\n        list: sorted\n      }, m.idMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ListView, \"nX9vpG6C0LoLgFsWgKN6GdULwR0=\");\n_c = ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["useEffect","useState","searchMealsByName","SearchBar","SortControls","Card","jsxDEV","_jsxDEV","ListView","_s","query","setQuery","raw","setRaw","sortKey","setSortKey","sortDir","setSortDir","trim","then","filtered","filter","m","strMeal","toLowerCase","includes","sorted","sort","a","b","av","strArea","bv","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","style","color","length","display","gridTemplateColumns","gap","map","meal","list","idMeal","_c","$RefreshReg$"],"sources":["/Users/ishandesai/Desktop/mp2/mp2/src/pages/ListView.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { searchMealsByName } from \"../api/meals\";\nimport { Meal } from \"../types/meal\";\nimport SearchBar from \"../components/SearchBar\";\nimport SortControls from \"../components/SortControls\";\nimport Card from \"../components/Card\";\n\nexport default function ListView() {\n  const [query, setQuery] = useState(\"\");\n  const [raw, setRaw] = useState<Meal[]>([]);\n  const [sortKey, setSortKey] = useState<\"name\" | \"area\">(\"name\");\n  const [sortDir, setSortDir] = useState<\"asc\" | \"desc\">(\"asc\");\n\n  useEffect(() => {\n    if (query.trim() === \"\") {\n      setRaw([]); // don’t show anything until user searches\n      return;\n    }\n    searchMealsByName(query).then(setRaw);\n  }, [query]);\n\n  const filtered = raw.filter(m =>\n    m.strMeal.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const sorted = [...filtered].sort((a, b) => {\n    const av = sortKey === \"name\" ? a.strMeal : a.strArea || \"\";\n    const bv = sortKey === \"name\" ? b.strMeal : b.strArea || \"\";\n    return sortDir === \"asc\" ? av.localeCompare(bv) : bv.localeCompare(av);\n  });\n\n  return (\n    <div>\n      <h2>List View</h2>\n      <SearchBar value={query} onChange={setQuery} />\n      <SortControls\n        sortKey={sortKey}\n        setSortKey={setSortKey}\n        sortDir={sortDir}\n        setSortDir={setSortDir}\n      />\n\n      {query.trim() === \"\" ? (\n        <p style={{ color: \"#636e72\" }}>Start typing to search for meals...</p>\n      ) : sorted.length > 0 ? (\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit, minmax(200px,1fr))\",\n            gap: \"1rem\"\n          }}\n        >\n          {sorted.map(m => (\n            <Card key={m.idMeal} meal={m} list={sorted} />\n          ))}\n        </div>\n      ) : (\n        <p>No results found.</p>\n      )}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}